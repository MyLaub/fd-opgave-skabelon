---
import cv from "@data/coreValues.json"

type Link = { text: string; url: string };
type CVItem = { icon: string; title: string; description: string; link?: Link };
type CV = { title: string; subtitle: string; values: CVItem[] };
const data = cv as CV;


const icons = import.meta.glob("../icons/*.svg", {
  eager: true,
  query: "?url",
  import: "default",
}) as Record<string, string>;


const items = data.values.map((f) => ({
  ...f,
  iconUrl: icons[`../icons/${f.icon}.svg`] ?? null,
}));

---

<ul class="container">
  {items.map(({ iconUrl, title, description, link }) => (
    <li class="card">
        <div class="icon-container">
      {iconUrl && (
        <img class="icon" src={iconUrl} alt="" width="24" height="24" loading="lazy" />
      )}</div>
      <h3>{title}</h3>
      <p>{description}</p>
      {link && <a href={link.url}>{link.text} </a>}
    </li>
  ))}
</ul>

<style>
ul{
 --card-width: 400px;
 --content-width: 50rem;
--card-padding: 2.75rem 2.1875rem;
--card-gap: 2.25rem;
--card-border-radius: 8px;
 --card-background: var(--bg-grey);
 --card-text-color: var(--bg-black);

    list-style: none;
    padding: 0;
    display: flex;
    gap: var(--card-gap);
    overflow-x: auto;

    li{
      flex: var(--card-width);
      background: var(--card-background);
      color: var(--card-text-color);
      padding: var(--card-padding);
      border-radius: var(--card-border-radius);

    > * {
        gap: 2rem;
      }

      .icon-container{
        inline-size: 48px; 
        block-size: 48px; 
        border-radius: 50%;
        background: var(--bg-black);
        display: grid;
          margin-block-end: clamp(.5rem, 1vw, .75rem);

        img{
            color: black;
            place-self: center;
            filter: invert(1) brightness(1000);
        }
      }

      p{
        margin: 0 0 clamp(.75rem, 1.4vw, 1rem) 0;
      }

      a{
          margin-block-start: 1.375rem;
          text-decoration: none;
          color: var(--bg-black);
      }
    }
}
</style>
