---

import fp from "../data/financialProjections.json";


type Link = { text: string; url: string };
type FPItem = { icon: string; title: string; description: string; link?: Link };
type FP = { title: string; subtitle: string; values: FPItem[] };
const data = fp as FP;


const icons = import.meta.glob("../icons/*.svg", {
  eager: true,
  query: "?url",
  import: "default",
}) as Record<string, string>;


const items = data.values.map((f) => ({
  ...f,
  iconUrl: icons[`../icons/${f.icon}.svg`] ?? null,
}));

---

<ul class="full-width">
  {items.map(({ iconUrl, title, description, link }) => (
    <li class="card">
      {iconUrl && (
        <img class="icon" src={iconUrl} alt="" width="24" height="24" loading="lazy" />
      )}
      <h3>{title}</h3>
      <p>{description}</p>
      {link && <a href={link.url}>{link.text}</a>}
    </li>
  ))}
</ul>

<style>
  ul {
--scroll-padding:max(1rem, 50% - var(--content-width) / 2);
--card-width: 400px;
 --content-width: 75rem;
        --card-padding: 2.75rem 2.1875rem;
        --card-gap: 2.25rem;
        --card-border-radius: 8px;
        --card-background: #EBEBEB;
        --card-text-color: ##181818;

    list-style: none;
    padding: 0;
    display: flex;
    gap: var(--card-gap);
    padding-inline: var(--scroll-padding);
    scroll-padding-inline: var(--scroll-padding);
   scroll-snap-type: x mandatory;
    
    overflow-x: auto;
    
    li{
      scroll-snap-align: start;
      flex: 1 0 var(--card-width);
      background: var(--card-background);
      color: var(--card-text-color);
      padding: var(--card-padding);
      border-radius: var(--card-border-radius);
    }
  }
</style>
